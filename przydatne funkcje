# fukcja zliczająca zera i nulle

df_stat<-function(data)
{
  df_status = data.frame(
    q_zeros = sapply(data, function(x) sum(x == 0, na.rm = T)),
    p_zeros = round(100 * sapply(data, function(x) sum(x ==0, na.rm = T))/nrow(data), 2),
    q_na = sapply(data, function(x) sum(is.na(x))), 
    p_na = round(100 * sapply(data, function(x) sum(is.na(x)))/nrow(data), 2),
    type = sapply(data, class),
    unique = sapply(data,function(x) sum(!is.na(unique(x)))))
  df_status$variable = rownames(df_status)
  rownames(df_status) = NULL
  df_status = df_status[, c(7, 1, 2, 3, 4, 5, 6)]
}



## funkcja zmieniajaca braki danych w facotrach

for(i in 1:dim(dane.fac)[2])
{
  nazwa<-c(as.character(names(dane.fac[i])))
  dane.fac[,nazwa]<-factor(dane.fac[,nazwa], levels = c(levels(dane.fac[,nazwa]),"brakDanych"))
  dane.fac[which(is.na(dane.fac[,nazwa])),nazwa]<-"brakDanych"
}


######################### INFORAMTION VALUE #####################################

RankingPredyktorow <- function(Ramka.danych,zmienna.modelowana,klasa.modelowana)
  
{
  
  nazwy.zmiennych <- attr(Ramka.danych,"names")
  ile.zmiennych = dim(Ramka.danych)[2]
  
  zmienna.modelowana.index <- which(nazwy.zmiennych == zmienna.modelowana) 
  zmienna.modelowana = Ramka.danych[,zmienna.modelowana.index]
  
  
  #klasa.modelowana = 1
  wsz.dobrzy=nrow(Ramka.danych[zmienna.modelowana==klasa.modelowana,]) 
  wsz.zli= nrow(Ramka.danych[zmienna.modelowana!=klasa.modelowana,])
  
  b = matrix (0,ile.zmiennych,2)
  
  for (i in 1:ile.zmiennych)     
  {          # if (i==40 || i==190) next
     
    cat(paste("aktualna wartosc i to:",i,"\n"))
    zmienna.objasniajaca = Ramka.danych[,i]
    zmienna.objasniajaca.nazwa =  names(Ramka.danych)[i]
    
    #zmienna.objasniajaca=Wplaty_30_Data0    
    #zmienna.objasniajaca.nazwa =  names(Ramka.danych)[10]
    
    apom <- table(zmienna.objasniajaca,zmienna.modelowana)
    a <- apom[!(apom[,1]==0 & apom[,2]==0),]
    if (is.null(dim(a)) == TRUE) next
    proc.dobrych <- a[,2]/wsz.dobrzy
    proc.zlych <- a[,1]/wsz.zli 
    proc.dobrych[proc.dobrych==0] <- proc.zlych[proc.dobrych==0]
    proc.zlych[proc.zlych==0] <- proc.dobrych[proc.zlych==0]
    
    IV <- sum((proc.dobrych - proc.zlych)*log(proc.dobrych / proc.zlych))  
    
    
    #zrzut wyniku
    
    b[i,1] <- zmienna.objasniajaca.nazwa
    b[i,2] <- IV
  }
  
  bpom = b
  d=data.frame(bpom)
  d[order(-as.numeric(d$X2)),]
  
}

ranking.predyktorow<-function(ramka.danych,objasniana,klasa.modelowana=1,
                               wersja=list(c(2),c("org","Leszek","PM","Karas","R"))) 
{
  if( wersja[[1]] == 5 ) 
  {
    library(woe)
    output <- iv.mult(df=ramka.danych,y=objasniana,summary=T)
    names(output)[1] <- "cecha"
    return(output)
  }
  
  nazwy.cech <- names(ramka.danych[,!names(ramka.danych)%in%objasniana])
  IV=0
  
  for (i in 1:length(nazwy.cech)) 
  {
    IV[i] <- wartosc.informacyjna(ramka.danych,objasniana,klasa.modelowana
                                  ,nazwy.cech[i],wersja)
    cat(paste("wykonano:",i,", wszystkich ",length(nazwy.cech),"\n"))
  }
  output <- data.frame(cecha=as.character(nazwy.cech),IV=as.numeric(IV))
  
  return(output[order(output$IV,decreasing=T),])
}

######## tabela frakcji w % ###########

#  library(knitr)

pct <- function(x){
  tbl <- table(x)
  tbl_pct <- cbind(tbl,round(prop.table(tbl)*100,2))
  colnames(tbl_pct) <- c('Count','Percentage')
  kable(tbl_pct)
}
